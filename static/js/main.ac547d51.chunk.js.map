{"version":3,"sources":["Three/constants.ts","Three/updateViewSize.tsx","Three/builders/Materials.ts","Three/builders/Lights.ts","Three/builders/Texture.ts","Three/builders/base.ts","Three/hooks/useRenderer.tsx","Three/hooks/useCamera.tsx","Three/hooks/useTHREE.tsx","Three/hooks/useScene.tsx","utils/index.ts","Three/ThreeContainer.tsx","Components/index.tsx","Three/Three.tsx","Components/hooks/useResponsive.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["COLORS","updateViewSize","renderer","camera","_getBoundingClientRec","domElement","parentElement","getBoundingClientRect","width","height","setSize","THREE","_renderer$domElement$","aspect","updateProjectionMatrix","makePearlMetal","flatShading","arguments","length","undefined","color","WHITE","alphaMap","NoiseTexture","fromDimensions","alphaTest","metalness","fog","bumpMap","bumpScale","displacementScale","displacementBias","clearCoat","clearCoatRoughness","side","make","PearlMetal","PearlMetalFlat","makePoint","lightArgs","positionArray","light","Object","construct","_resolveColor","concat","toConsumableArray","position","fromArray","makeAmbient","intensity","ident","Point","Ambient","isA","i","FILL_GENERATORS","RGBANoise","_v","Math","random","RGBAAlternate","w","h","m","log2","fillFnGenerator","fillKeyOrGenerator","mapFn","fill","Uint8Array","rgba","map","texture","needsUpdate","wrapS","wrapT","buildScene","useRenderer","options","_useState","useState","args","objectSpread","antialias","buildRenderer","slicedToArray","rendererTransform","useCamera","buildCamera","cameraTransform","useTHREE","rendererOptions","cameraOptions","_useRenderer","_useCamera","_useScene","scene","sceneTransform","useScene","useEffect","shadowMap","enabled","setClearColor","setAnimationLoop","render","callback","Utils","classCallCheck","this","createClass","key","value","fn","wait","id","setTimeout","apply","_len","Array","_key","clearTimeout","start","_len2","_key2","loop","stop","_len3","_key3","requestAnimationFrame","cancelAnimationFrame","ThreeContainer","styled","div","_templateObject","DEFAULT_INPUT_PROPS","type","VALUE_TRANSFORMERS","number","v","Number","text","useInputComponent","initialValue","props","_useState2","setValue","innerProps","assign","toString","react_default","a","createElement","Components_TransformInput","TransformInput","_ref2","objectWithoutProperties","onChange","e","_ref","_ref$type","_valueTransform","target","Three","_useTHREE","_useTHREE2","updateThree","container","React","createRef","Materials","material","repeatTime","sin","Date","now","_useState3","_useState4","rotation","setRotation","geometry","shapeParams","tubeDiameter","tubularSegmentsBase","tubularSegmentsExp","radialSegments","axisRotations","tubeRotations","arr","getAttribute","array","sinh","mesh","castShadow","receiveShadow","z","lookAt","add","updateRotation","debounce","anim","repeatAnimation","x","y","toArray","remove","light1","Lights","lightParams","positions","slice","light2","light3","light4","current","appendChild","_useResponsive","ref","_useState2$","setDimensions","resize","window","addEventListener","removeEventListener","useResponsive","_useResponsive2","App","_useInputComponent","_useInputComponent2","TubularSegmentsBaseInput","_useInputComponent3","_useInputComponent4","TubularSegmentsExpInput","_useInputComponent5","_useInputComponent6","RadialSegmentsInput","_useInputComponent7","_useInputComponent8","TubeDiameterInput","_useInputComponent9","_useInputComponent10","AxisRotationsInput","_useInputComponent11","_useInputComponent12","TubeRotationsInput","lightPositions","setLightPositions","className","onClick","biRandom","Boolean","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ac547d51.chunk.js","sourcesContent":["export enum COLORS {\n  WHITE = 0xffffff,\n  BLACK = 0x000000,\n  ROSE = 0xff8888,\n  YELLOW = 0xffff00,\n  CYAN_S = 0x33ffff,\n  LIME = 0xbbff00,\n  CLOUD_WHITE = 0xeeffff\n}\n","import * as THREE from \"three\";\n\nexport function updateViewSize(renderer: THREE.Renderer, camera: THREE.Camera) {\n  const {\n    width,\n    height\n  } = (renderer.domElement.parentElement || renderer.domElement).getBoundingClientRect();\n\n  renderer.setSize(width, height);\n\n  if (camera instanceof THREE.PerspectiveCamera) {\n    const { width, height } = renderer.domElement.getBoundingClientRect();\n    camera.aspect = width / height;\n    camera.updateProjectionMatrix();\n  }\n}\n","import * as THREE from 'three';\nimport { COLORS } from '../constants';\nimport { NoiseTexture } from '.';\n\nexport const makePearlMetal = (flatShading: boolean = false) => {\n  return new THREE.MeshPhysicalMaterial({\n    color: COLORS.WHITE,\n    alphaMap: NoiseTexture.fromDimensions(1023, 1, 'RGBAAlternate'),\n    alphaTest: .5,\n    metalness: 100,\n    fog: true,\n    bumpMap: NoiseTexture.fromDimensions(2048, 512),\n    bumpScale: .008,\n    displacementScale: 0.25,\n    displacementBias: .1,\n    clearCoat: 1,\n    clearCoatRoughness: 0.095,\n    flatShading,\n    side: THREE.DoubleSide,\n  });\n}\n\nexport const make = {\n  PearlMetal: () => makePearlMetal(),\n  PearlMetalFlat: () => makePearlMetal(true),\n}\n","import { COLORS } from \"../constants\";\nimport * as THREE from \"three\";\ntype ColorIdent = keyof typeof COLORS | number | THREE.Color\nexport function makePoint(color: ColorIdent, lightArgs: number[], positionArray?: number[]) {\n  const light = new THREE.PointLight(_resolveColor(color), ...lightArgs);\n\n  positionArray && light.position.fromArray(positionArray)\n  return light;\n}\n\nexport function makeAmbient(color: ColorIdent, intensity: number = .5) {\n  return new THREE.AmbientLight(_resolveColor(color), intensity)\n}\n\nfunction _resolveColor(ident: ColorIdent) {\n  switch (typeof ident) {\n    // ts-ignore\n    case 'undefined': return;\n    case 'number': return ident;\n    case 'string':\n      if (typeof COLORS[ident] === 'number') {\n        return COLORS[ident]\n      }\n    default: return;\n  }\n}\n\nexport const make = {\n  Point: makePoint,\n  Ambient: makeAmbient,\n}\n","import * as THREE from \"three\";\n\ntype TextureFillFunction = (_v: number, index: number) => number;\ntype TextureFillGenerator = (...args: any) => TextureFillFunction\nconst isA = (i: number) => (i - 3 % 4)\nconst FILL_GENERATORS = {\n  RGBANoise: () => (_v: any, i: number) => {\n    return (isA(i) ? (1 - Math.random()) : 1) * 255\n  },\n  RGBAAlternate: (w: number, h: number = w) => {\n    const m = 4 << -~Math.log2(w * h);\n\n    return (_v: any, i: number) => {\n      return isA(i) ? (((~~(i / m)) + (i >> 2)) % 2) * 255 : 255;\n    };\n  }\n}\n\ntype TextureKeyOrGenerator = keyof typeof FILL_GENERATORS | TextureFillGenerator\n\nfunction rgba(w: number, h: number): Uint8Array {\n  const m = -~Math.log2(w * h);\n  return new Uint8Array(4 << m);\n}\n\nfunction _gen(fillFnGenerator: TextureKeyOrGenerator) {\n  return typeof fillFnGenerator === 'string' ?\n    FILL_GENERATORS[fillFnGenerator] :\n    fillFnGenerator\n}\n\n// ts-ignore\nexport const NoiseTexture = {\n  FILL_GENERATORS,\n  /**\n   * Make Random Texture\n   */\n  fromDimensions: function fromDimensions(\n    width: number,\n    height = width,\n    fillKeyOrGenerator: TextureKeyOrGenerator = FILL_GENERATORS.RGBANoise\n  ): THREE.Texture {\n    const mapFn: TextureFillGenerator = _gen(fillKeyOrGenerator)\n    const fill = rgba(width, height).map(mapFn(width, height));\n    const texture = new THREE.DataTexture(fill, width, height, THREE.RGBAFormat);\n\n    texture.needsUpdate = true;\n    if (!(Math.log2(width * height) % 1)) {\n      texture.wrapS = THREE.RepeatWrapping;\n      texture.wrapT = THREE.RepeatWrapping;\n    }\n\n    return texture;\n  }\n}\n","import * as THREE from \"three\";\n\nexport type PerspectiveCameraArgs = [number?, number?, number?, number?]\nexport function buildCamera(options?: PerspectiveCameraArgs) {\n  return new THREE.PerspectiveCamera(...(options || []));\n}\nexport function buildRenderer(options?: THREE.WebGLRendererParameters) {\n  const args = { antialias: true, ...options };\n  return new THREE.WebGLRenderer(args);\n}\n\nexport function buildScene() {\n  return new THREE.Scene();\n}\n","import { useState } from \"react\";\nimport { buildRenderer } from \"../builders\";\n\nexport function useRenderer(options?: THREE.WebGLRendererParameters): StateHook<THREE.Renderer> {\n  const [renderer] = useState<THREE.Renderer>(() => buildRenderer(options));\n\n  return [renderer, function updateRenderer(rendererTransform) {\n    rendererTransform(renderer)\n  }]\n}\n","import { useState } from \"react\";\nimport { buildCamera, PerspectiveCameraArgs } from \"../builders\";\n\nexport function useCamera(options?: PerspectiveCameraArgs): StateHook<THREE.Camera> {\n  const [camera] = useState<THREE.Camera>(() => buildCamera(options));\n\n  return [camera, function updateCamera(cameraTransform) {\n    cameraTransform(camera)\n  }]\n}\n","import { PerspectiveCameraArgs } from \"../builders\";\nimport { useCamera, useScene, useRenderer } from \".\";\nimport { useEffect } from \"react\";\nimport * as THREE from \"three\";\nimport { COLORS } from \"../constants\";\n\ntype ThreeUpdaterFunction = (renderer: THREE.Renderer, camera: THREE.Camera, scene: THREE.Scene) => void;\ntype ThreeUpdater = (callback: ThreeUpdaterFunction) => void\nexport function useTHREE(rendererOptions?: THREE.WebGLRendererParameters, cameraOptions?: PerspectiveCameraArgs): [THREE.Renderer, THREE.Camera, THREE.Scene, ThreeUpdater] {\n  const [renderer] = useRenderer(rendererOptions);\n  const [camera] = useCamera(cameraOptions);\n  const [scene] = useScene();\n\n  function threeUpdater(callback: ThreeUpdaterFunction) {\n    callback(renderer, camera, scene)\n  }\n\n  useEffect(() => {\n    if (renderer === null) return;\n\n    if (renderer instanceof THREE.WebGLRenderer) {\n      renderer.shadowMap.enabled = true;\n      // renderer.setClearColor(0x00ff00);\n      renderer.setClearColor(COLORS.WHITE);\n      // renderer.setClearAlpha(0.5)\n      renderer.setAnimationLoop(() => {\n        renderer.render(scene, camera)\n      })\n\n      return () => {\n        // @ts-ignore\n        renderer.setAnimationLoop(null)\n      }\n    }\n  }, [renderer, camera, scene]);\n\n  return [renderer, camera, scene, threeUpdater];\n}\n","import { buildScene } from \"../builders\";\n\nimport { useState } from \"react\";\n\nexport function useScene(): StateHook<THREE.Scene> {\n  const [scene] = useState<THREE.Scene>(buildScene);\n\n  return [scene, function updateScene(sceneTransform) {\n    sceneTransform(scene)\n  }]\n}\n","interface _TimelineFn {\n  start(...args: any): void\n  stop(): void\n}\n\nexport class Utils {\n  static throttle(fn: Function, wait: number = 50) {\n    let id: number | null = null;\n\n    return (...args: any) => {\n      if (typeof id === 'number') return;\n      id = setTimeout(() => id = null, wait);\n      fn(...args)\n    }\n  }\n\n  static debounce(fn: Function, wait: number = 50) {\n    let id: number | null = null;\n\n    return (...args: any) => {\n      if (typeof id === 'number') clearTimeout(id);\n      id = setTimeout(() => {\n        fn(...args)\n        id = null;\n      }, wait);\n    }\n  }\n\n  static repeatTime(fn: Function, wait: number = 50): _TimelineFn {\n    let id: number;\n\n    return {\n      start: (...args: any) => {\n        (function loop() {\n          id = setTimeout(loop, wait);\n          fn(...args)\n        })()\n      },\n      stop: () => {\n        clearTimeout(id)\n      }\n    }\n  }\n\n  static repeatAnimation(fn: Function): _TimelineFn {\n    let id: number;\n\n    return {\n      start: (...args: any) => {\n        (function loop() {\n          id = requestAnimationFrame(loop);\n          fn(...args)\n        })()\n      },\n      stop: () => {\n        cancelAnimationFrame(id)\n      }\n    }\n  }\n\n  static biRandom(): number { return 2 * Math.random() - 1 }\n}\n","import styled from \"styled-components\";\n\nexport const ThreeContainer = styled.div`\nheight: calc(100vh - 100px);\nmax-width: 100%;\n`\n","import React, { useState } from 'react';\nexport * from './hooks';\n\ninterface InputProps {\n  type: 'number' | 'text'\n}\ntype _PInputProps = Partial<InputProps>\nconst DEFAULT_INPUT_PROPS: InputProps = {\n  type: 'number'\n}\ntype _Transformer = (v: string) => any\nconst VALUE_TRANSFORMERS: {\n  [key: string]: _Transformer\n} = {\n  number: (v: string) => Number(v),\n  text: (v: string) => v\n}\nexport function useInputComponent<T>(initialValue: T, props?: _PInputProps): [T, React.ReactElement] {\n  const [value, setValue] = useState(initialValue)\n  const innerProps = Object.assign({ value: value.toString(), setValue }, DEFAULT_INPUT_PROPS, props)\n\n  return [value, <TransformInput {...innerProps} />];\n}\n\nfunction _valueTransform({ type = 'number' }: _PInputProps): _Transformer {\n  return VALUE_TRANSFORMERS[type]\n}\ninterface TransformInputProps {\n  type: 'number' | 'text'\n  setValue(arg0: any): void\n}\nexport const TransformInput: React.FC<TransformInputProps> = ({ setValue, ...props }) => {\n  return (\n    <input {\n      ...{\n        ...props,\n        onChange: (e: React.ChangeEvent<HTMLInputElement>) => {\n          return setValue(_valueTransform(props)(e.target.value.toString()));\n        }\n      }\n    } />\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport * as THREE from 'three';\nimport { updateViewSize } from './updateViewSize';\nimport { useTHREE } from './hooks';\nimport { Utils } from '../utils';\nimport { ThreeContainer } from './ThreeContainer';\nimport { Materials, Lights } from './builders';\nimport { useResponsive } from '../Components';\n\ninterface ThreeProps {\n  shapeParams: {\n    tubeDiameter: number;\n    tubularSegmentsBase: number;\n    tubularSegmentsExp: number;\n    radialSegments: number;\n    axisRotations: number;\n    tubeRotations: number;\n  },\n  lightParams: {\n    positions: number[]\n  }\n}\nfunction Three(props: ThreeProps) {\n  const [\n    renderer, camera, scene,\n    updateThree\n  ] = useTHREE();\n\n  const container = React.createRef<HTMLDivElement>();\n  const [material] = useState(Materials.make.PearlMetal);\n  useEffect(() => {\n    const fn = Utils.repeatTime(() => {\n      material.displacementScale += Math.sin((Date.now() >> 3) / 64) / 100\n      // material.displacementScale += Math.cos(Date.now() >> 8) / 50\n      // material.color.offsetHSL(.01, 0, 0)\n      // material.needsUpdate = true\n    }, 0)\n    fn.start()\n\n    return fn.stop\n  }, [material])\n  const [rotation, setRotation] = useState<[number, number, number]>([0, 0, 0]);\n  useEffect(() => {\n    const geometry = new THREE.TorusKnotBufferGeometry(5, props.shapeParams.tubeDiameter / 1000, props.shapeParams.tubularSegmentsBase << props.shapeParams.tubularSegmentsExp, props.shapeParams.radialSegments, props.shapeParams.axisRotations, props.shapeParams.tubeRotations);\n    // const geometry = new THREE.OctahedronBufferGeometry(2, 1);\n    const arr = geometry.getAttribute('position').array as Float32Array;\n    for (let i = 0; i < arr.length; i += 6) {\n      arr[i] = Math.sinh(arr[i] / 5) * 5\n      arr[i + 1] = Math.sinh(arr[i + 1] / 5) * 5\n      arr[i + 2] = Math.sinh(arr[i + 2])\n    }\n    const mesh = new THREE.Mesh(geometry, material);\n    mesh.rotation.fromArray(rotation)\n    mesh.castShadow = mesh.receiveShadow = true;\n\n    camera.position.z = 20;\n    camera.lookAt(mesh.position);\n\n    scene.add(mesh);\n\n    const updateRotation = Utils.debounce(setRotation, 0);\n\n    const anim = Utils.repeatAnimation(() => {\n      mesh.rotation.x += 0.01;\n      mesh.rotation.y += 0.01;\n      mesh.rotation.z -= 0.01;\n      updateRotation(mesh.rotation.toArray() as [number, number, number])\n    })\n    anim.start();\n    return () => {\n      anim.stop();\n      scene.remove(mesh)\n    };\n  }, [props.shapeParams.tubeDiameter, props.shapeParams.tubularSegmentsExp, props.shapeParams.tubularSegmentsBase, props.shapeParams.radialSegments, props.shapeParams.axisRotations, props.shapeParams.tubeRotations]);\n  useEffect(() => {\n    const light1 = Lights.makePoint('ROSE', [1.4, 0, 1.2], props.lightParams.positions.slice(0, 3));\n    scene.add(light1);\n\n    const light2 = Lights.makePoint('YELLOW', [1, 0, 2], props.lightParams.positions.slice(3, 6));\n    scene.add(light2);\n\n    const light3 = Lights.makePoint('CYAN_S', [1, 0, 8], props.lightParams.positions.slice(6, 9));\n    scene.add(light3);\n\n    const light4 = Lights.make.Ambient('LIME', .5)\n    scene.add(light4);\n\n\n    return () => {\n      scene.remove(light1, light2, light3, light4)\n    };\n  }, [props.lightParams])\n  useEffect(() => {\n    if (container.current === null) return;\n    if (renderer === null) return;\n    const { current } = container;\n\n    current.appendChild(renderer.domElement)\n  }, [renderer, container]);\n\n  const [w, h] = useResponsive(container);\n\n  useEffect(() => {\n    updateThree(updateViewSize);\n  }, [updateThree, w, h]);\n\n  return (\n    <ThreeContainer\n      ref= { container }\n    />\n  );\n}\n\nexport {\n  Three\n}\n","import { useEffect, useState } from \"react\";\n\nexport function useResponsive(ref: React.RefObject<HTMLDivElement>) {\n  const [{ width, height }, setDimensions] = useState(() => {\n    if (ref.current) return ref.current.getBoundingClientRect();\n    return { width: -1, height: -1 }\n  });\n\n  useEffect(() => {\n    function resize() {\n      ref.current && setDimensions(ref.current.getBoundingClientRect());\n    }\n    window.addEventListener('resize', resize);\n    return () => window.removeEventListener('resize', resize)\n  }, [ref]);\n\n  return [width, height]\n}\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Three } from './Three';\nimport { useInputComponent } from './Components';\nimport { Utils } from './utils';\n\nconst App: React.FC = () => {\n  const [tubularSegmentsBase, TubularSegmentsBaseInput] = useInputComponent(24);\n  const [tubularSegmentsExp, TubularSegmentsExpInput] = useInputComponent(0);\n  const [radialSegments, RadialSegmentsInput] = useInputComponent(16);\n  const [tubeDiameter, TubeDiameterInput] = useInputComponent(320);\n  const [axisRotations, AxisRotationsInput] = useInputComponent(17);\n  const [tubeRotations, TubeRotationsInput] = useInputComponent(7);\n  const [lightPositions, setLightPositions] = useState([\n    0, 2, 3,\n    -2, 6, 0,\n    2, 0, 3,\n  ]);\n  return (\n    <div className=\"App\">\n      <Three shapeParams={{\n        tubularSegmentsExp,\n        tubularSegmentsBase,\n        radialSegments,\n        axisRotations,\n        tubeRotations,\n        tubeDiameter,\n      }} lightParams={{ positions: lightPositions }} />\n      <button onClick={() => {\n        setLightPositions(\n          lightPositions.map(() => Utils.biRandom() * 7).slice()\n        )\n      }} >\n        Randomize Lights\n    </button>\n      {TubeDiameterInput}/1000\n      {TubularSegmentsBaseInput}\n      {\"<<\"}\n      {TubularSegmentsExpInput}\n      {RadialSegmentsInput}\n      {AxisRotationsInput}\n      {TubeRotationsInput}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}